[{"categories":null,"content":"Hey there! If you know me through my side job related to building websites, you might assume this website is built with WordPress. But nope! On my journey to becoming a writer, I wanted to learn something new (WordPress had become too easy for me) and experience the magical feeling that comes with learning and creating something new. To be honest, my hacker mind initially thought, “Let’s build a blog from scratch using an esoteric programming language, create a solid framework, release it as open source to the public, and finally, build the blog on top of it.” From another perspective I also considered some great options that focus on the writing experience, such as Bearblog, Substack, and Medium. After swinging between extremes, from the “full developer experience” to the “full writer experience,” it was time to find equilibrium between both and choose the best way to create a blog. So, I started exploring popular stacks and frameworks available. Among the many stacks available (like MEAN, MEARN, LAMP, Django, Ruby on Rails, LAMP), I wanted to choose something “powerful.” This was clearly a subjective matter so I made a list of characteristics I wanted on my website (big-picture requirements, if they can be termed as such): A blog An “about me” page A minimalistic view Social media icons Built-in support for multilingual pages Fast loading pages Mobile responsiveness Easy maintenance and scalability A custom domain No need to pay for hosting It’s clear that what I had in mind was simple (just static content, no databases, no fancy backend). So, why would I want to use a “powerful” stack? It would be over engineering! I can easily create a simple project using HTML and CSS (or even use a pure HTML, CSS template), and that’s it! This brings up an interesting point. If you are an engineer/maker/developer, you might agree that we became engineers/makers/developers because we enjoy building things and solving complex problems. Sometimes, it’s exciting to imagine a complex solution to a problem pursuing the “ultimate solution to all cases related to it”. However, besides I’m skeptical that an “ultimate solution to all cases” exists for a problem, it is really common to see people getting lost in the problem, losing focus on other important parameters, such as time available, feasibility, and complexity… and paradoxically that creates a more important a problem because you disconnect from the impactful solution and the outcomes of the thing you work on. Creating and delivering something can become an interesting or a Sisyphean activity. At the end you as a maker/creator must find fulfillment in the act of shipping stable iterations of your creation over time in the same way you find it in the act of solving complex issues. So, I had finally made some progress… I had decided to create my blog with pure HTML, CSS and JS. But I was not happy with that choice. While the decision to use pure HTML, CSS, and JS is commendable for the full customization it provides, incorporating a framework could be a better idea and a strategic choice to overcome common development hurdles related with time of developing, group the complexity involved, improve efficiency, and enhance the overall performance of your blog website as it evolves. So, I spent almost two weeks (in my free time) reading all over the web about frameworks until I found an architectural approach called “Jamstack” (JavaScript, APIs, Markdown) which I liked. In layman terms it simplifies the development workflow by decoupling the front-end from the back-end, precompiling/prerendering much of the content before the HTML reaches the browser, creating clean and atomic deployments, serving a website/application statically on the edge. For my plans it seems to provide an interesting mix of authoring \u0026 developer experience. To start writing all you have to do is create a new markdown file in the proper directory and start writing and if you are in developer mode you can add your own custom","date":"2024-01-14","objectID":"/tech-stack-powering-this-website/:0:0","tags":null,"title":"The tech stack powering this website","uri":"/tech-stack-powering-this-website/"},{"categories":null,"content":"The other day while I was scrolling through my LinkedIn feed I read the following quote: Quote «The electric light did not come from the continuous improvement of candles» -Oren Harari This idea is relevant in the process of creating products and services, specifically it exemplifies the “incremental” versus “disruptive” improvement concepts. The term “creation” is clear but in the current world a lot of people just copy/duplicate someone else’s product/service and implement it in their country or region targeting it as “innovation”. This is wrong, and what they are merely doing is taking advantage of one of the economic features of globalization. When you take an existing product/service and make it a little better, it’s an incremental innovation. A lot of companies and organizations tend to use this approach to keep their competitive advantage in the market. It tends to follow a systematic and structured way, minimizing the risks associated with a “disruptive idea”. Incremental innovations often use the “Kaizen” and “PDCA” approach to create small and incremental improvements to products and services on a regular basis, with the goal of gradually improving performance, quality, and efficiency over time. But these incremental improvements follow the idea chain of the active product/service, and the “innovative” output (if it exists) would be a serendipity process. There is one quote from Henry Ford that summarizes this idea: «If I had asked people what they wanted, they would have said faster horses\". When your product/service radically changes the way people use or consume it, it’s a disruptive innovation. Disruptive products and services typically start small and grow rapidly, eventually displacing established players in the market, and those who don’t accomplish it often don’t tend to be as economic and process efficient as they thought and end up being eaten by others. Being disruptive requires a willingness to take high risks, experiment, and challenge the status quo having the potential to transform industries or create new ones. That is why a lot of startups are seen as the counterculture of classic well established business and bigTechs, they adopt higher risks, move faster and surf the ripple effects of the techno-socio-economic changes around them. None of these approaches is better than the other, they are just different approaches to take when you are creating a product or service and the decision of what you should choose depends on a lot of factors. But there is one thing that lies behind them, the first principles of the stuff you want to improve. If you focus merely on the product/service, what you are going to do is waste all your energy and resources in the abstraction concept of the main problem behind it. But if you zoom out to see the bigger picture, focus on the root issue, understand the capabilities and constraints of why it is done in the way it is currently done, you’ll have a better chance of finding high impact solutions, no matter if it is an incremental or disruptive change. ","date":"2023-03-25","objectID":"/incremental-disruptive-innovations/:0:0","tags":null,"title":"About Incremental and Disruptive innovations","uri":"/incremental-disruptive-innovations/"},{"categories":null,"content":"I have been curious about starting or not a blog. There are a lot of texts out there that already share good insights and ideas around different topics of my interest, so why should I repeat the same information? But the thing is I believe there are a lot of things out there waiting to be told in a fresh and wild way. When you take a different perspective or approach, you may discover insights that others have missed. This may be contrary to the common belief «there is nothing new under the sun». Of course we can break down ideas into their component parts until we reach the first principles behind it, arguing that all that we know and will know are just permutations and combinations of them. While it has a kernel of truth, it is a hyper-generalization and oversimplification of everything. The concept of ideas as a scarce resource implies that there is a finite amount of creativity or innovation available in the world and there is nothing more wrong than it. Of course an idea cannot be expected to be novel to all individuals and It’s easy to fall into the trap of regurgitating the same ideas and cliches often found in common knowledge and communication channels. That is why I had my doubts about this blog. But ideas live in a perpetual feedback loop where these are being recycled, refined and evolving through time… they are a remix from the previous ones and in the same way they become a foundation for future ones. They are dynamic entities that continually shift and transform, influenced by the experiences and perspectives of those who encounter them. The most impactful ideas are those that take existing ideas and make them accessible or applicable to a wider audience. It’s not about the originality of your idea, it’s about its value and impact. If your idea is innovative to the people who read it, that’s enough. But how do I know if my idea can be innovative to the people? As someone once said «If you can identify a delusional popular belief, you can find what lies hidden behind it: the contrarian truth». This is where innovative ideas and insight lies - in the ability to think differently, question the status quo and take a contrarian approach. Sometimes ideas can feel clear and complete but It’s only when you try to put them into words that you discover they’re no. When we put our thoughts and ideas down on paper, we can see them more clearly and objectively and challenge ourselves to think more deeply and critically about the issues that matter most to us. In this way, writing is an incredible way to explore, discover and organize the connections between different ideas. The most influential programmers I know have an emphasis and encourage the written word. Writing is very much like coding in a lot of aspects. For example, both require the ability to organize complex ideas in a logical way with a coherent structure that is easy to read and understand. Ultimately both involve iterative steps, refinements and clear thinking. This blog will be my personal space to develop my writing skills and my systematic thinking. Here I will organize my thoughts and ideas in a coherent and structured manner, identifying biases and assumptions that may be impeding my ability to think clearly and generate or find new ideas/insights around a topic of my interest. It’s my repository of random ideas, I hope you enjoy some posts here. ","date":"2023-03-20","objectID":"/why-have-blog/:0:0","tags":null,"title":"Why do I have a Blog?","uri":"/why-have-blog/"},{"categories":null,"content":"About me","date":"2022-12-04","objectID":"/about/","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"I’m a Computer Systems Engineer with experience in the development life cycle of Embedded Systems and ML applications with proven ability troubleshooting critical software issues and delivering reliable software on schedule. My professional experience ranges from Startups to BigTechs, being part of innovative and multicultural teams designing and developing solutions that meet market needs and demands. I have strong experience working with Internet of Things (focusing on celullar / LoRa / BLE networks and MCU firmware\u0026software development), embedded Machine Learning and Cloud platforms (AWS, GCP). I have been volunteer in different organizations where I have had the opportunity to contribute in technical and managment roles. These experiences include Wikimedia Mexico, NodeBotsMX, and IBM Z Systems. I really love learn new things and solve problems in a creative and innovative way through hardware and software. Some side projects I do in my free time include websites, blockchain stuff, and podcasting (you can listen to my “Wikimentes podcast” in your favourite podcasting platform). When I’m not sat in front of my keyboard, I try to stay in shape working out at the gym and spending quality time with my pets. I love training martial arts (I’m 1st dan black belt in taekwondo and karate!) and dancing (mainly salsa and rock\u0026roll). If you believe my knowledge and experience can help your company or project to succeed, please don’t hesitate to contact me via email to «hi@antonoriza.com» and lets talk! ","date":"2022-12-04","objectID":"/about/:0:0","tags":null,"title":"About me","uri":"/about/"}]